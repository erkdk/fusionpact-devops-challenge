name: Build, Test and Deploy

on:
  push:
    branches: [ main, task/level3-cicd-automation ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
        
    - name: Run tests
      run: |
        pytest -v

  build-and-push-backend:
    runs-on: ubuntu-latest
    needs: test-backend
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/fusionpact-backend:latest
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/fusionpact-backend:latest
        cache-to: type=inline

  build-and-push-frontend:
    runs-on: ubuntu-latest
    needs: test-backend
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/fusionpact-frontend:latest
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/fusionpact-frontend:latest
        cache-to: type=inline

  deployment-success:
    runs-on: ubuntu-latest
    needs: [build-and-push-backend, build-and-push-frontend]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deployment completed
      run: |
        echo "CI/CD Pipeline completed successfully!"
        echo "Docker images pushed to Docker Hub"
        echo "Render.com will auto-deploy from main branch"
